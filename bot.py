from config import TOKEN
import logging
import KeyBoard as kb
from aiogram import Bot, Dispatcher, executor, types

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

#–û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã
@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç, –≤—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ!", reply_markup=kb.greet_kb)

#–í—ã–±–æ—Ä —á–µ–≥–æ –Ω—É–∂–Ω–æ
@dp.message_handler(lambda message: message.text == "üíº –£—Å–ª—É–≥–∏ üíº")
async def choice_service(message: types.Message):
    await message.answer("–•–æ—Ä–æ—à–æ")
    await message.answer("–ß—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ? –í—ã–±–µ—Ä–∏")

@dp.message_handler(lambda message: message.text == "üç´ –¢–æ–≤–∞—Ä—ã üç´")
async def choice_goods(message: types.Message):
    await message.answer("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!")
    await message.answer("–í—ã–±–µ—Ä–∏, –∫–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä", reply_markup=kb.kb_foh)

#–í—ã–±–æ—Ä –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –µ—Å–ª–∏ –¢–æ–≤–∞—Ä—ã
@dp.message_handler(lambda message: message.text == "üç´ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ üç´")
async def goods(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ", reply_markup=kb.kb_food)

@dp.message_handler(lambda message: message.text == "üíÉ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü üï∫")
async def human(message: types.Message):
    await message.answer("–õ–∞–¥–Ω–æ, –≤–æ—Ç —Ç–µ–±–µ —Å–ø–∏—Å–æ–∫")
    await message.answer("–í—ã–±–µ—Ä–∏, —Ç–æ–≥–æ —É –∫–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å, –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–≥–æ –Ω–æ–º–µ—Ä")

#–í—ã–±–æ—Ä –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –µ—Å–ª–∏ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤

if __name__ == '__main__':
    executor.start_polling(dp)

